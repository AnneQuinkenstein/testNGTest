<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="10" passed="5" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-03-23T18:46:38 CET" name="Suite" finished-at="2021-03-23T18:46:38 CET" duration-ms="444">
    <groups>
      <group name="smoke">
        <method signature="day3.DemoFromTest3()[pri:0, instance:TestNG.day3@37374a5e]" name="DemoFromTest3" class="TestNG.day3"/>
        <method signature="Basics.SecondTest()[pri:0, instance:TestNG.Basics@8646db9]" name="SecondTest" class="TestNG.Basics"/>
        <method signature="day3.DemoFromTest3()[pri:0, instance:TestNG.day3@306279ee]" name="DemoFromTest3" class="TestNG.day3"/>
      </group> <!-- smoke -->
    </groups>
    <test started-at="2021-03-23T18:46:38 CET" name="later in the day" finished-at="2021-03-23T18:46:38 CET" duration-ms="81">
      <class name="TestNG.day2">
        <test-method signature="SecondTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.day2@47db50c5]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" data-provider="getData" finished-at="2021-03-23T18:46:38 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method signature="SecondTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.day2@47db50c5]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" data-provider="getData" finished-at="2021-03-23T18:46:38 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method signature="SecondTest(java.lang.String, java.lang.String)[pri:0, instance:TestNG.day2@47db50c5]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" data-provider="getData" finished-at="2021-03-23T18:46:38 CET" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
      </class> <!-- TestNG.day2 -->
    </test> <!-- later in the day -->
    <test started-at="2021-03-23T18:46:38 CET" name="basics" finished-at="2021-03-23T18:46:38 CET" duration-ms="142">
      <class name="TestNG.day3">
        <test-method signature="DemoFromTest3()[pri:0, instance:TestNG.day3@37374a5e]" started-at="2021-03-23T18:46:38 CET" name="DemoFromTest3" finished-at="2021-03-23T18:46:38 CET" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at TestNG.day3.DemoFromTest3(day3.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DemoFromTest3 -->
        <test-method signature="SecondTest()[pri:0, instance:TestNG.day3@37374a5e]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" finished-at="2021-03-23T18:46:38 CET" depends-on-methods="TestNG.day3.DemoFromTest3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method day3.SecondTest()[pri:0, instance:TestNG.day3@37374a5e] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method day3.SecondTest()[pri:0, instance:TestNG.day3@37374a5e] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:101)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
      </class> <!-- TestNG.day3 -->
      <class name="TestNG.Basics">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:TestNG.Basics@8646db9]" started-at="2021-03-23T18:46:38 CET" name="prerequisite" finished-at="2021-03-23T18:46:38 CET" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="Demo(java.lang.String, java.lang.String)[pri:0, instance:TestNG.Basics@8646db9]" started-at="2021-03-23T18:46:38 CET" name="Demo" finished-at="2021-03-23T18:46:38 CET" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[basic.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method signature="SecondTest()[pri:0, instance:TestNG.Basics@8646db9]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" finished-at="2021-03-23T18:46:38 CET" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:TestNG.Basics@8646db9]" started-at="2021-03-23T18:46:38 CET" name="lastExecution" finished-at="2021-03-23T18:46:38 CET" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- TestNG.Basics -->
    </test> <!-- basics -->
    <test started-at="2021-03-23T18:46:38 CET" name="later" finished-at="2021-03-23T18:46:38 CET" duration-ms="13">
      <class name="TestNG.day3">
        <test-method signature="DemoFromTest3()[pri:0, instance:TestNG.day3@306279ee]" started-at="2021-03-23T18:46:38 CET" name="DemoFromTest3" finished-at="2021-03-23T18:46:38 CET" duration-ms="3" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at TestNG.day3.DemoFromTest3(day3.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DemoFromTest3 -->
        <test-method signature="SecondTest()[pri:0, instance:TestNG.day3@306279ee]" started-at="2021-03-23T18:46:38 CET" name="SecondTest" finished-at="2021-03-23T18:46:38 CET" depends-on-methods="TestNG.day3.DemoFromTest3" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method day3.SecondTest()[pri:0, instance:TestNG.day3@306279ee] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method day3.SecondTest()[pri:0, instance:TestNG.day3@306279ee] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:101)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:425)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:68)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SecondTest -->
      </class> <!-- TestNG.day3 -->
    </test> <!-- later -->
  </suite> <!-- Suite -->
</testng-results>
